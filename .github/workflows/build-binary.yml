# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
name: build binary

on:
  push:
    paths:
      - ci/version.txt
#      - ci/dockerfile.ci
      - '**' # for debug
#    tags:
#      - '*'


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ci_folder: ['ci']

    env:  # set global vas
      UBUNTU_IMAGE_VERSION: "24.04"
      GO_IMAGE_VERSION: "1.23.1"

    outputs:
      version: ${{ steps.vars.outputs.VERSION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version
        id: vars
        run: |
          cd ${{ matrix.ci_folder }}
          if [[ "${{ github.ref }}" == "refs/tags/"* ]]; then            
            echo "VERSION=$(git describe --tags)"
            echo "VERSION=$(git describe --tags)" >> $GITHUB_ENV
            echo "VERSION=$(git describe --tags)" >> $GITHUB_OUTPUT
          else            
            echo "VERSION=$(cat version.txt)"
            echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV
            echo "VERSION=$(cat version.txt)" >> $GITHUB_OUTPUT
          fi
          echo "TIMESTAMP=$(date -u +%Y%m%d%H%M%S)" >> $GITHUB_ENV
          echo "GIT_COMMIT_HASH=$(git rev-parse --short HEAD)"  >> $GITHUB_ENV
          echo GIT_COMMIT_HAS=$(git rev-parse --short HEAD)

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "${{ env.GO_IMAGE_VERSION }}"

      - name: Build
        run: go build -ldflags="-X main.version=$VERSION -X main.buildTime=$BUILD_TIMESTAMP -X main.commitHash=$GIT_COMMIT_HASH" -o /app/process-net-exporter .

      - name: Check version info
        run: |
          /app/process-net-exporter --version

#
#
#      - name: Build and push
#        uses: docker/build-push-action@v6
#        with:
#          file: ./${{ matrix.ci_folder }}/${{ env.DOCKER_FILE }}
#          push: true
#          tags: |
#            ${{ env.DOCKER_REPO }}:${{ env.VERSION }}
#            ${{ env.DOCKER_REPO }}:latest
#          build-args: |
#            TIMESTAMP=${{ env.TIMESTAMP }}
#            VERSION=${{ env.VERSION }}
#            GIT_COMMIT_HASH=${{ env.GIT_COMMIT_HASH }}
#            UBUNTU_IMAGE_VERSION=${{ env.UBUNTU_IMAGE_VERSION }}
#            GO_IMAGE_VERSION=${{ env.GO_IMAGE_VERSION }}